[tool.poetry]
name = "concourse-pulumi-resource"
version = "0.1.0"
description = "A resource to enable execution of Pulumi projects in Concourse using the automation API and the Python bindings."
authors = ["MIT Open Learning"]
license = "BSD-3-Clause"

[tool.poetry.dependencies]
python = "^3.9"
pulumi = "^3.22.1"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.0.0"
black = "^21.12b0"
mypy = "^1.0"
isort = "^5.10.1"
ruff = "^0.0.255"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "A",      # flake8-builtins
    # "ARG",  # flake8-unused-arguments
    # "ANN",  # flake8-annotations
    "B",      # flake8-bugbear
    # "BLE",  # flake8-blind-except
    # "C4",   # flake8-comprehensions
    # "COM",  # flake8-commas
    "DTZ",    # flake8-datetimez
    "D",      # pydocstyle
    "E",      # pydocstyle
    "ERA",  # eradicate
    # "EM",   # flake8-errmsg
    "EXE",    # flake8-executable
    "F",      # flake8
    "G",      # flake8-logging-format
    "ICN",    # flake8-import-conventions
    # "INP",    # flake8-no-pep420
    "ISC",    # flake8-implicit-str-concat
    "N",      # pep8-naming
    # "PD",   # pandas-vet
    "PIE",    # flake8-pie
    # "PGH",  # pygrep-hooks                [Enable]
    # "PT",   # flake8-pytest-style         [Enable]
    "PTH",  # flake8-use-pathlib
    "PLR",    # Refactor
    "Q",      # flake8-quotes
    "RET",    # flake8-return
    "S",      # flake8-bandit
    "SIM",    # flake8-simplify
    "T10",    # flake8-debugger
    "T20",    # flake8-print
    "TCH",  # flake8-type-checking
    "TID",    # flake8-tidy-imports
    "UP",     # pyupgrade
    "W",      # pydocstyle
    "YTT",     # flake8-2020
    "RUF"
]
ignore = [
    "B008",
    "B905",
    "D104",
    "D200",
    "D202",
    "D205",
    "D301",
    "D400",
    "N801",
    "N802",
    "N803",
    "N806",
    "N813",
    "N815",
    "N816",
    "PIE804",
    "RET504",
    "RET505",
    "RET506",
    "RET507",
    "RET508",
    "UP007"

]
typing-modules = ["colour.hints"]
fixable = ["I", "D", "B", "E", "F", "UP", "C4", "Q", "RET", "PIE", "SIM","UP", "W", "RUF"]

[tool.ruff.pydocstyle]
convention = "pep257"

[tool.ruff.flake8-quotes]
inline-quotes = "double"
